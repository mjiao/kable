openapi: 3.0.0
info:
  title: api
  version: '1.0'
  description: ''
servers:
  - url: '/'
    description: ''
paths:
  /concepts:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Concept'
              examples: {}
      operationId: getConcepts
      description: 'Get a list of concepts, available in the repository.'
    parameters: []
  /apps:
    parameters: []
    post:
      summary: ''
      operationId: postApps
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
      description: Create a new app and store it in the app repository.
    get:
      summary: ''
      operationId: getApps
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/App'
              examples: {}
      description: 'Get a list of apps, defined in the app repository.'
    delete:
      summary: ''
      operationId: deleteApps
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      description: Delete one or multiple apps from the app repository.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  path:
                    type: string
components:
  schemas:
    App:
      title: App
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/AppMeta'
        values:
          type: array
          description: The values that should be provided for the referenced concept.
          items:
            type: object
            properties:
              id:
                type: string
              value:
                type: string
        concept:
          $ref: '#/components/schemas/ConceptMeta'
      required:
        - meta
        - concept
    Concept:
      type: object
      description: Concept is a representation of a JSONnet with predefined required and optional inputs.
      title: Concept
      properties:
        meta:
          $ref: '#/components/schemas/ConceptMeta'
        values:
          description: Values this concept takes as input.
          type: object
          properties:
            mandatory:
              $ref: '#/components/schemas/ValueList'
            optional:
              $ref: '#/components/schemas/ValueList'
      required:
        - meta
    ValueList:
      title: ValueList
      type: array
      description: A list of typed key/value pairs.
      items:
        $ref: '#/components/schemas/Value'
    Value:
      title: Value
      type: object
      description: A typed value.
      properties:
        id:
          type: string
          description: The id of this value.
        type:
          type: string
          description: Type of the value in in this object.
      required:
        - id
        - type
    ConceptMeta:
      title: ConceptMeta
      type: object
      description: The metadata for a concept.
      properties:
        name:
          type: string
          description: The name of this concept.
        group:
          type: string
          description: The group of this concept.
      required:
        - name
    AppMeta:
      title: AppMeta
      type: object
      properties:
        name:
          type: string
          description: The name of this app.
        group:
          type: string
          description: The group of this app.
      required:
        - name
      description: The metadata for an app.
